openapi: 3.0.1
info:
  title: FastAPI Streaming API
  description: An API that streams responses for a given topic using OpenAI's GPT-4o-mini model.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0"

paths:
  /:
    get:
      summary: Health check endpoint
      description: Returns a simple message to confirm the server is running.
      responses:
        "200":
          description: Server is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "FastAPI streaming server is running"
      tags:
        - Health

  /stream:
    post:
      summary: Stream response for a topic
      description: Streams text responses for a given topic provided in the request body using OpenAI's GPT-4o-mini model.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        "200":
          description: Successful streaming response
          content:
            text/plain:
              schema:
                type: string
                description: Streaming text output generated by the model
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
        "400":
          description: Bad request, e.g., invalid or missing topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Invalid or missing topic"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Error processing request"
      tags:
        - Streaming

components:
  schemas:
    QueryRequest:
      type: object
      required:
        - topic
      properties:
        topic:
          type: string
          description: The topic to generate a streaming response for
          example: "Python programming"
      additionalProperties: false

tags:
  - name: Health
    description: Endpoint for checking server status
  - name: Streaming
    description: Operations related to streaming responses